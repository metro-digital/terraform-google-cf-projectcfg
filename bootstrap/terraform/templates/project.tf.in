# This file was generated by the booostrap.sh script from the
# https://github.com/metro-digital/terraform-google-cf-projectcfg repository

module "projectcfg" {
  #source     = "metro-digital/cf-projectcfg/google"
  source     = "./../../"
  project_id = local.project_id
  # version    = "~> ${MODULE_VERSION}"

  # # The module automatically grants the same permissions to the Manager, Developer and
  # # Observer groups as the panel does. There is no need to explicitly configure them.
  # # All other bindings in the projects IAM policy can be configured here:
  # iam_policy = [
  #   # Allow manager group to use this project
  #   # as billing project for BigQuery jobs
  #   {
  #     role = "roles/bigquery.jobUser"
  #     members = [
  #       local.iam_manager_group,
  #     ]
  #   },
  #   # Same for developer group, but only during working days from 07:00 till 18:59
  #   {
  #     role = "roles/bigquery.jobUser"
  #     members = [
  #       local.iam_developer_group,
  #     ]
  #     condition = {
  #       title       = "Working Hours"
  #       description = "Allow during working hours (Monday-Friday, 7:00 to 18:59)"
  #       expression  = <<-EOC
  #         request.time.getHours('Europe/Berlin') >= 7 &&
  #         request.time.getHours('Europe/Berlin') < 19 &&
  #         // Days of the week range from 0 to 6, where 0 == Sunday and 6 == Saturday.
  #         request.time.getDayOfWeek('Europe/Berlin') >= 1 &&
  #         request.time.getDayOfWeek('Europe/Berlin') <= 5
  #       EOC
  #     }
  #   }
  # ]

  service_accounts = {
    "${SA_SHORT_NAME}" = {
      display_name = "Service account used in IaC pipelines"
      iam_policy   = [
        {
            role    = "roles/iam.serviceAccountTokenCreator"
            members = [
                # Allow manager group to impersonate IaC service account
                local.iam_manager_group,
                # Allow service account to impersonate itself, useful for pipelines
                local.iam_iac_service_account
            ]
        }
      ]
      project_iam_policy_roles = [
          ${GITHUB_REPOSITORY_IAM_ROLE_STRING}
          "roles/compute.networkAdmin",
          "roles/dns.admin",
          "roles/vpcaccess.admin",
          "roles/compute.securityAdmin",
          "roles/storage.admin",
          "roles/storage.objectAdmin",
          "roles/iam.serviceAccountAdmin",
          "roles/iam.securityAdmin",
          "roles/iam.roleAdmin",
          "roles/serviceusage.serviceUsageAdmin"
      ]
      ${GITHUB_REPOSITORY_SA_BLOCK_STRING}
    }
  }

  # # List of vpc regions to configure and how to set them up
  # # (default is europe-west1 only without Serverless VPC Access or NAT)
  # vpc_regions = {
  #   europe-west1 = {
  #     vpcaccess = true # Enable serverless VPC access for this region
  #     nat       = 1    # Create a Cloud NAT with 1 (static) external IP address (IPv4) in this region
  #   },
  #   europe-west3 = {
  #     vpcaccess = false # Disable serverless VPC access for this region
  #     nat       = 0     # No Cloud NAT for this region
  #   },
  # }

  # # List of enabled services
  # enabled_services = [
  #   "bigquery.googleapis.com",
  #   "compute.googleapis.com",
  #   "cloudscheduler.googleapis.com",
  #   "iap.googleapis.com"
  # ]
}
