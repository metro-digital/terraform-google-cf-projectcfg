# Copyright 2023 METRO Digital GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Configure an aliased instance of the terraform google provider with current credentials
provider "google" {
  alias = "current_credentials"
}

# create a token of the IaC service account with the aliased provider instance
data "google_service_account_access_token" "iac_sa_token" {
  provider = google.current_credentials
  # using a local here can result into erros like
  # "The configuration for ... depends on values that cannot be determined until apply."
  # so better hardcode the service account name if possible
  target_service_account = "${SA_FULL_NAME}"
  scopes                 = ["userinfo-email", "cloud-platform"]
}

# Configure the default (as no "alias" is set) instance to use the token created
provider "google" {
  access_token = data.google_service_account_access_token.iac_sa_token.access_token
}

# Configure the default (as no "alias" is set) instance to use the token created
provider "google-beta" {
  access_token = data.google_service_account_access_token.iac_sa_token.access_token
}

# Get current user
data "google_client_openid_userinfo" "current_credentials" {
  provider = google.current_credentials
}

output "runner_email" {
  description = "Returns the email address of the user who ran the terraform code"
  value       = data.google_client_openid_userinfo.current_credentials.email
}
