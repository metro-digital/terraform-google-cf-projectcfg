# Copyright 2022 METRO Digital GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

module "project-cfg" {
  source     = "metro-digital/cf-projectcfg/google"
  project_id = local.project_id
  version    = ">2.0"

  roles = {
    "roles/viewer" = [
      local.iam_manager_group,
      local.iam_developer_group
    ],
    "roles/cloudsupport.techSupportEditor" = [
      local.iam_manager_group,
    ]
    "roles/compute.networkAdmin" = [
      local.iam_iac_service_account
    ]
    "roles/vpcaccess.admin" = [
      local.iam_iac_service_account
    ]
    "roles/compute.securityAdmin" = [
      local.iam_iac_service_account
    ]
    "roles/storage.admin" = [
      local.iam_iac_service_account
    ]
    "roles/storage.objectAdmin" = [
      local.iam_iac_service_account
    ]
    "roles/iam.serviceAccountKeyAdmin" = [
      local.iam_iac_service_account
    ]
    "roles/iam.serviceAccountAdmin" = [
      local.iam_iac_service_account
    ]
    "roles/iam.securityAdmin" = [
      local.iam_iac_service_account
    ]
    "roles/iam.roleAdmin" = [
      local.iam_iac_service_account
    ]
    "roles/serviceusage.serviceUsageAdmin" = [
      local.iam_iac_service_account
    ]
    ${GITHUB_REPOSITORY_IAM_BLOCK_STRING}
  }

  service_accounts = {
    "${SA_SHORT_NAME}" = {
      display_name = "Service account used in IaC pipelines"
      iam          = {
        "roles/iam.serviceAccountTokenCreator" = [
          # Allow manager group to impersonate IaC service account
          local.iam_manager_group,
          # Allow service account to impersonate itself, useful for pipelines
          local.iam_iac_service_account
        ]
      }
      ${GITHUB_REPOSITORY_SA_BLOCK_STRING}
    }
  }

  ## List of vpc regions to configure and how to set them up
  ## (default is europe-west1 only without Serverless VPC Access or NAT)
  #vpc_regions = {
  #  europe-west1 = {
  #    vpcaccess = true # Enable serverless VPC access for this region
  #    nat       = 1    # Create a Cloud NAT with 1 (static) external IP address (IPv4) in this region
  #  },
  #  europe-west3 = {
  #    vpcaccess = false # Disable serverless VPC access for this region
  #    nat       = 0     # No Cloud NAT for this region
  #  },
  #}

  ## List of enabled services
  #enabled_services = [
  #  "bigquery.googleapis.com",
  #  "compute.googleapis.com",
  #  "cloudscheduler.googleapis.com",
  #  "iap.googleapis.com"
  #]
}
